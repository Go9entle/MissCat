% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xy_compare.R
\name{mx_my_compare}
\alias{mx_my_compare}
\title{Compare Rows of Two Data Tables}
\usage{
mx_my_compare(DT_x, DT_y)
}
\arguments{
\item{DT_x}{A data.table representing the first dataset to compare.}

\item{DT_y}{A data.table representing the second dataset to compare with.}
}
\value{
A list of length equal to the number of rows in `DT_x`. Each element of the list contains
        the row indices from `DT_y` that match the corresponding row in `DT_x`.
        If a row in `DT_x` contains missing values, the function compares only the non-missing values.
}
\description{
Compares each row of `DT_x` with `DT_y`, returning the indices of matching rows in `DT_y`.

This function compares two data.tables, `DT_x` and `DT_y`, and returns a list where each element contains
the row indices from `DT_y` that match the corresponding row in `DT_x`. It handles missing values in `DT_x`
by excluding columns with missing values during the comparison.
}
\examples{
library(data.table)

# Create example data.tables
DT_x <- data.table(A = c("a", "b", NA), B = c(1, 2, 3))
DT_y <- data.table(A = c("a", "b", "c"), B = c(1, 2, 4))

# Compare rows
result <- mx_my_compare(DT_x, DT_y)
print(result)

# Expected output:
# [[1]]
# [1] 1
#
# [[2]]
# [1] 2
#
# [[3]]
# integer(0)  # No matches due to NA in DT_x

}
